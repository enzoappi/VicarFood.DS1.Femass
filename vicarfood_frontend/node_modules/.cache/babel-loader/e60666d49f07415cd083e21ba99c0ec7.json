{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kathy\\\\Documents\\\\2021.1\\\\DS1\\\\vicarFood\\\\VicarFood.DS1.Femass\\\\vicarfood_frontend\\\\src\\\\Components\\\\cliente\\\\Cliente.js\";\nimport React, { Component } from 'react';\nimport Container from '../Container';\nimport './Cliente.css';\nimport { MdSave, MdModeEdit } from \"react-icons/md\";\nimport { Checkbox } from 'react-native-paper';\n\nvar Cliente = /*#__PURE__*/function (_Component) {\n  _inherits(Cliente, _Component);\n\n  function Cliente() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cliente);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cliente)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      nome: \"\",\n      cpf: \"\",\n      telefone: \"\",\n      cliente: [],\n      idEndereco: \"\",\n      logradouro: \"\",\n      numero: \"\",\n      nomeBairro: \"\",\n      endereco: [],\n      incluindo: false,\n      alterando: false,\n      checked: true,\n      setChecked: false\n    };\n\n    _this.txtNome_change = function (event) {\n      _this.setState({\n        nome: event.target.value\n      });\n    };\n\n    _this.txtCpf_change = function (event) {\n      _this.setState({\n        cpf: event.target.value\n      });\n    };\n\n    _this.txtTelefone_change = function (event) {\n      _this.setState({\n        telefone: event.target.value\n      });\n    };\n\n    _this.preencherCliente = function () {\n      console.log('preenchendo a lista');\n      var url = window.servidor + '/cliente/listar';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          cliente: data\n        });\n      });\n    };\n\n    _this.txtLogradouro_change = function (event) {\n      _this.setState({\n        logradouro: event.target.value\n      });\n    };\n\n    _this.txtNumero_change = function (event) {\n      _this.setState({\n        numero: event.target.value\n      });\n    };\n\n    _this.txtNomeBairro_change = function (event) {\n      _this.setState({\n        nomeBairro: event.target.value\n      });\n    };\n\n    _this.preencherEndereco = function () {\n      console.log('preenchendo a lista');\n      var url = window.servidor + '/endereco/listar';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this.setState({\n          endereco: data\n        });\n      });\n    };\n\n    _this.iniciarNovo = function () {\n      //this.setState({incluindo: true, nome: '', cpf: '', telefone: ''})\n      _this.setState({\n        incluindo: true,\n        nome: '',\n        cpf: '',\n        telefone: '',\n        logradouro: '',\n        numero: '',\n        nomeBairro: ''\n      });\n    };\n\n    _this.iniciarAlterar = function (cliente, endereco) {\n      _this.setState({\n        alterando: true,\n        nome: cliente.nome,\n        cpf: cliente.cpf,\n        telefone: cliente.telefone,\n        logradouro: endereco.logradouro,\n        numero: endereco.numero,\n        nomeBairro: endereco.nomeBairro\n      });\n    };\n\n    _this.gravarNovoCliente = function () {\n      var dadosEndereco = {\n        \"logradouro\": _this.state.logradouro,\n        \"numero\": _this.state.numero,\n        \"nomeBairro\": _this.state.nomeBairro\n      };\n      var dadosCliente = {\n        \"nome\": _this.state.nome,\n        \"cpf\": _this.state.cpf,\n        \"telefone\": _this.state.telefone,\n        \"logradouro\": _this.state.logradouro,\n        \"numero\": _this.state.numero,\n        \"nomeBairro\": _this.state.nomeBairro\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dadosEndereco)\n      };\n      var url = window.servidor + '/endereco/incluir';\n      fetch(url, requestOptions);\n      requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dadosCliente)\n      };\n      url = window.servidor + '/cliente/incluir';\n      fetch(url, requestOptions).then(function (fim) {\n        _this.setState({\n          incluindo: false\n        });\n\n        _this.preencherEndereco();\n\n        _this.preencherCliente();\n      }).catch(function (erro) {\n        return console.log(erro);\n      });\n    };\n\n    _this.gravarAlterar = function () {\n      var dados = {\n        \"nome\": _this.state.nome,\n        \"cpf\": _this.state.cpf,\n        \"telefone\": _this.state.telefone,\n        \"logradouro\": \"Rua M\",\n        \"numero\": \"1\",\n        \"nomeBairro\": \"Mirante\"\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dados)\n      };\n      var url = window.servidor + '/cliente/alterar';\n      fetch(url, requestOptions).then(function (fim) {\n        _this.setState({\n          alterando: false\n        });\n\n        _this.preencherCliente();\n      }).catch(function (erro) {\n        return console.log(erro);\n      });\n    };\n\n    _this.excluir = function (cliente) {\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var url = window.servidor + '/cliente/excluir/' + cliente.cpf;\n      fetch(url, requestOptions).then(function (fim) {\n        _this.preencherCliente();\n      }).catch(function (erro) {\n        return console.log(erro);\n      });\n    };\n\n    _this.voltar = function () {\n      _this.setState({\n        incluindo: false,\n        alterando: false\n      });\n    };\n\n    _this.renderIncluirNovoCliente = function () {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, \"Identifica\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, \"Dados Pessoais\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"box\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"nome\",\n        placeholder: \"Nome Completo\",\n        value: _this.state.nome,\n        onChange: _this.txtNome_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"CPF\",\n        placeholder: \"CPF\",\n        value: _this.state.cpf,\n        onChange: _this.txtCpf_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"telefone\",\n        placeholder: \"Telefone\",\n        value: _this.state.telefone,\n        onChange: _this.txtTelefone_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: function onClick() {\n          return _this.gravarNovo();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(MdSave, {\n        className: \"save\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 89\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: function onClick() {\n          return _this.editarNovo();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(MdModeEdit, {\n        className: \"edit\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 89\n        }\n      }), \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"box\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        name: \"bairro\",\n        placeholder: \"Bairro\",\n        id: \"bairro\",\n        value: _this.state.selectedOption,\n        onChange: _this.txtNome_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"numero\",\n        placeholder: \"N\\xFAmero\",\n        classeName: \"text\",\n        value: _this.state.numero,\n        onChange: _this.txtNumero_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"complemento\",\n        placeholder: \"Complemento\",\n        value: _this.state.complemento,\n        onChange: _this.txtComplemento_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"referencia\",\n        placeholder: \"Refer\\xEAncia\",\n        value: _this.state.referencia,\n        onChange: _this.txtReferencia_change,\n        type: \"text\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: function onClick() {\n          return _this.gravarNovo();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(MdSave, {\n        className: \"save\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 89\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: function onClick() {\n          return _this.editarNovo();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(MdModeEdit, {\n        className: \"edit\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 89\n        }\n      }), \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, \"Modo de Entrega\"), /*#__PURE__*/React.createElement(Checkbox, {\n        status: checked ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          setChecked(!checked);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Cliente, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.preencherCliente();\n      this.preencherEndereco();\n    }\n  }, {\n    key: \"render\",\n\n    /*renderAlterarCliente = () => {\r\n            return (\r\n                <div>\r\n                    <div className=\"row mt-5 pt-2\">\r\n                        <div className=\"col-2\"></div>\r\n                        <div className=\"col-8 text-white bg-danger text-center mt-5 pt-2\"><h3>Identificação</h3></div>\r\n                        <div className=\"col-2\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-4 pt-2\">\r\n                        <div className=\"col-2\"></div>\r\n                        <div className=\"col-8 text-warning bg-dark mt-1 pt-1\"><text>Dados Pessoais</text></div>\r\n                        <div className=\"col-2\"></div>\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <label className=\"col-1 text-center text-white bg-dark\">Nome</label>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.nome} onChange={this.txtNome_change} className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <label className=\"col-1 text-center text-white bg-dark\">CPF</label>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.cpf} readOnly className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-2\"></div>\r\n                                <label className=\"col-1 text-center text-white bg-dark\">Telefone</label>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.telefone} onChange={this.txtTelefone_change} className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-2\"></div>\r\n                        <div className=\"col-1\">\r\n                            <button className=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Gravar Alteração\" onClick = {() => this.gravarAlterar()}><i className=\"bi bi-cloud-check-fill\"></i></button>\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <button className=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Voltar\" onClick = {() => this.voltar()}><i className=\"bi bi-arrow-return-left\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    \r\n    \r\n        renderExibirCliente = () => {\r\n            return(\r\n                <div className=\"mt-5 pt-4\">\r\n                    <button type=\"button\" className=\"btn btn-secondary mt-3\" onClick={() => this.iniciarNovo()}>Novo</button>\r\n                    <table className=\"table table-dark table-striped mt-2\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">CPF</th>\r\n                                <th scope=\"col\">Nome</th>\r\n                                <th scope=\"col\">Telefone</th>\r\n                                <th scope=\"col\">Logrodouro</th>\r\n                                <th scope=\"col\">Numero</th>\r\n                                <th scope=\"col\">Bairro</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.cliente && this.state.cliente.map(cliente => {\r\n                                if (cliente.cpf === \"132589897-55\") { //cpf de comparacao setado hardcoded no lado direito\r\n                                    return <tr key={cliente.cpf}>\r\n                                        <th scope=\"row\">{cliente.cpf}</th>\r\n                                        <td>{cliente.nome}</td>\r\n                                        <td>{cliente.telefone}</td>\r\n                                        <td>{cliente.logradouro}</td>\r\n                                        <td>{cliente.numero}</td>\r\n                                        <td>{cliente.nomeBairro}</td>\r\n                                        <td><button onClick={() => this.iniciarAlterar(cliente)} type=\"button\" className=\"btn btn-light\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Editar cliente\"><i className=\"bi bi-pencil-fill\"></i></button></td>\r\n                                        <td><button onClick={() => this.excluir(cliente)} type=\"button\" className=\"btn btn-light\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excluir cliente\"><i className=\"bi bi-trash-fill\"></i></button></td>\r\n                                    </tr>\r\n                                }\r\n                                return<tr></tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }*/\n    value: function render() {\n      var pagina = '';\n      pagina = this.renderIncluirNovoCliente();\n      return pagina;\n    }\n  }]);\n\n  return Cliente;\n}(Component);\n\nexport { Cliente as default };","map":{"version":3,"sources":["C:/Users/Kathy/Documents/2021.1/DS1/vicarFood/VicarFood.DS1.Femass/vicarfood_frontend/src/Components/cliente/Cliente.js"],"names":["React","Component","Container","MdSave","MdModeEdit","Checkbox","Cliente","state","nome","cpf","telefone","cliente","idEndereco","logradouro","numero","nomeBairro","endereco","incluindo","alterando","checked","setChecked","txtNome_change","event","setState","target","value","txtCpf_change","txtTelefone_change","preencherCliente","console","log","url","window","servidor","fetch","then","response","json","data","txtLogradouro_change","txtNumero_change","txtNomeBairro_change","preencherEndereco","iniciarNovo","iniciarAlterar","gravarNovoCliente","dadosEndereco","dadosCliente","requestOptions","method","headers","body","JSON","stringify","fim","catch","erro","gravarAlterar","dados","excluir","voltar","renderIncluirNovoCliente","gravarNovo","editarNovo","selectedOption","complemento","txtComplemento_change","referencia","txtReferencia_change","pagina"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Container from '../Container'\r\nimport './Cliente.css'\r\nimport { MdSave, MdModeEdit } from \"react-icons/md\";\r\nimport { Checkbox } from 'react-native-paper';\r\n\r\n\r\n\r\nexport default class Cliente extends Component {\r\n    state = {\r\n        nome: \"\",\r\n        cpf: \"\",\r\n        telefone: \"\",\r\n        cliente: [],\r\n        idEndereco: \"\",\r\n        logradouro: \"\",\r\n        numero: \"\",\r\n        nomeBairro: \"\",\r\n        endereco: [],\r\n        incluindo: false,\r\n        alterando: false,\r\n        checked: true,\r\n        setChecked: false\r\n    }\r\n    \r\n    txtNome_change = (event) => {\r\n        this.setState({nome: event.target.value})\r\n    }\r\n\r\n    txtCpf_change = (event) => {\r\n        this.setState({cpf: event.target.value})\r\n    }\r\n\r\n    txtTelefone_change = (event) => {\r\n        this.setState({telefone: event.target.value})\r\n    }\r\n    \r\n    preencherCliente = () => {\r\n        console.log('preenchendo a lista')\r\n        const url = window.servidor + '/cliente/listar'\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({cliente: data}));\r\n    }\r\n\r\n    txtLogradouro_change = (event) => {\r\n        this.setState({logradouro: event.target.value})\r\n    }\r\n\r\n    txtNumero_change = (event) => {\r\n        this.setState({numero: event.target.value})\r\n    }\r\n\r\n    txtNomeBairro_change = (event) => {\r\n        this.setState({nomeBairro: event.target.value})\r\n    }\r\n\r\n    preencherEndereco = () => {\r\n        console.log('preenchendo a lista')\r\n        const url = window.servidor + '/endereco/listar'\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({endereco: data}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.preencherCliente()\r\n        this.preencherEndereco()\r\n    }\r\n\r\n    iniciarNovo = () => {\r\n        //this.setState({incluindo: true, nome: '', cpf: '', telefone: ''})\r\n        this.setState({incluindo: true, nome: '', cpf: '', telefone: '', logradouro: '', numero: '', nomeBairro: ''})\r\n    }\r\n\r\n    /*iniciarAlterar = (cliente) => {\r\n        this.setState({alterando: true, nome: cliente.nome, cpf: cliente.cpf, telefone: cliente.telefone})\r\n    }*/\r\n\r\n    iniciarAlterar = (cliente, endereco) => {\r\n        this.setState({alterando: true, nome: cliente.nome, cpf: cliente.cpf, telefone: cliente.telefone, logradouro: endereco.logradouro, numero: endereco.numero, nomeBairro: endereco.nomeBairro})\r\n    }\r\n    \r\n    gravarNovoCliente = () => {\r\n        \r\n        const dadosEndereco = {\r\n            \"logradouro\": this.state.logradouro,\r\n            \"numero\": this.state.numero,\r\n            \"nomeBairro\": this.state.nomeBairro\r\n        }\r\n        \r\n        const dadosCliente = {\r\n            \"nome\": this.state.nome,\r\n            \"cpf\": this.state.cpf,\r\n            \"telefone\": this.state.telefone,\r\n            \"logradouro\": this.state.logradouro,\r\n            \"numero\": this.state.numero,\r\n            \"nomeBairro\": this.state.nomeBairro\r\n        }\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dadosEndereco)\r\n        };\r\n\r\n        let url = window.servidor + '/endereco/incluir'\r\n\r\n        fetch(url, requestOptions)\r\n\r\n        requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dadosCliente)\r\n        };\r\n\r\n        url = window.servidor + '/cliente/incluir'\r\n\r\n        fetch(url, requestOptions)\r\n            .then(fim => {\r\n                this.setState({incluindo: false})\r\n                this.preencherEndereco()\r\n                this.preencherCliente()\r\n            })\r\n        .catch(erro => console.log(erro));\r\n    }\r\n\r\n    gravarAlterar = () => {\r\n        const dados = {\r\n            \"nome\": this.state.nome,\r\n            \"cpf\": this.state.cpf,\r\n            \"telefone\": this.state.telefone,\r\n            \"logradouro\":\"Rua M\",\r\n            \"numero\": \"1\",\r\n            \"nomeBairro\": \"Mirante\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            \r\n            body: JSON.stringify(dados)\r\n        };\r\n\r\n        const url = window.servidor + '/cliente/alterar'\r\n\r\n        fetch(url, requestOptions)\r\n            .then(fim => {\r\n                this.setState({alterando: false})\r\n                this.preencherCliente()\r\n            })\r\n            .catch(erro => console.log(erro));\r\n    }\r\n\r\n    excluir = (cliente) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const url = window.servidor + '/cliente/excluir/' + cliente.cpf\r\n\r\n        fetch(url, requestOptions)\r\n            .then(fim => {\r\n                this.preencherCliente()\r\n            })\r\n            .catch(erro => console.log(erro));\r\n    }\r\n\r\n    voltar = () => {\r\n        this.setState({incluindo: false, alterando: false})\r\n    }\r\n    \r\n    renderIncluirNovoCliente = () => {\r\n        return (            \r\n            <Container>\r\n                <h1>Identificação</h1>\r\n                <div>\r\n                    <h3>Dados Pessoais</h3>\r\n                    <form className=\"box\">\r\n                        <input name=\"nome\" placeholder=\"Nome Completo\" value={this.state.nome} onChange={this.txtNome_change} type=\"text\"></input>\r\n                        <input name=\"CPF\" placeholder=\"CPF\" value={this.state.cpf} onChange={this.txtCpf_change}  type=\"text\"></input>\r\n                        <input name=\"telefone\" placeholder=\"Telefone\" value={this.state.telefone} onChange={this.txtTelefone_change} type=\"text\"></input>\r\n                       \r\n                        <div className=\"button\">\r\n                        <button className=\"button\" onClick = {() => this.gravarNovo()}> <MdSave className=\"save\"/> </button>\r\n                        <button className=\"button\" onClick = {() => this.editarNovo()}> <MdModeEdit className=\"edit\"/> </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h3>Endereço</h3>\r\n                    <form className=\"box\">\r\n                        <select name=\"bairro\" placeholder=\"Bairro\" id=\"bairro\" value={this.state.selectedOption} onChange={this.txtNome_change} type=\"text\"></select>\r\n                        <input name=\"numero\" placeholder=\"Número\" classeName=\"text\" value={this.state.numero} onChange={this.txtNumero_change}  type=\"text\"></input>\r\n                        <input name=\"complemento\" placeholder=\"Complemento\" value={this.state.complemento} onChange={this.txtComplemento_change} type=\"text\"></input>\r\n                        <input name=\"referencia\" placeholder=\"Referência\" value={this.state.referencia} onChange={this.txtReferencia_change} type=\"text\"></input>\r\n                        \r\n                        <div className=\"button\">\r\n                        <button className=\"button\" onClick = {() => this.gravarNovo()}> <MdSave className=\"save\"/> </button>\r\n                        <button className=\"button\" onClick = {() => this.editarNovo()}> <MdModeEdit className=\"edit\"/> </button>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h3>Modo de Entrega</h3>    \r\n                    <Checkbox status={checked ? 'checked' : 'unchecked'} onPress={() => { setChecked(!checked);}}/>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n/*renderAlterarCliente = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-5 pt-2\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-8 text-white bg-danger text-center mt-5 pt-2\"><h3>Identificação</h3></div>\r\n                    <div className=\"col-2\"></div>\r\n                </div>\r\n                <div className=\"row mt-4 pt-2\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-8 text-warning bg-dark mt-1 pt-1\"><text>Dados Pessoais</text></div>\r\n                    <div className=\"col-2\"></div>\r\n                    <form>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-2\"></div>\r\n                            <label className=\"col-1 text-center text-white bg-dark\">Nome</label>\r\n                            <div className=\"col-6\">\r\n                                <input value={this.state.nome} onChange={this.txtNome_change} className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-2\"></div>\r\n                            <label className=\"col-1 text-center text-white bg-dark\">CPF</label>\r\n                            <div className=\"col-6\">\r\n                                <input value={this.state.cpf} readOnly className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-2\"></div>\r\n                            <label className=\"col-1 text-center text-white bg-dark\">Telefone</label>\r\n                            <div className=\"col-6\">\r\n                                <input value={this.state.telefone} onChange={this.txtTelefone_change} className=\"form-control name-pull-image text-white bg-dark\" type=\"text\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-1\">\r\n                        <button className=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Gravar Alteração\" onClick = {() => this.gravarAlterar()}><i className=\"bi bi-cloud-check-fill\"></i></button>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <button className=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Voltar\" onClick = {() => this.voltar()}><i className=\"bi bi-arrow-return-left\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderExibirCliente = () => {\r\n        return(\r\n            <div className=\"mt-5 pt-4\">\r\n                <button type=\"button\" className=\"btn btn-secondary mt-3\" onClick={() => this.iniciarNovo()}>Novo</button>\r\n                <table className=\"table table-dark table-striped mt-2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">CPF</th>\r\n                            <th scope=\"col\">Nome</th>\r\n                            <th scope=\"col\">Telefone</th>\r\n                            <th scope=\"col\">Logrodouro</th>\r\n                            <th scope=\"col\">Numero</th>\r\n                            <th scope=\"col\">Bairro</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.cliente && this.state.cliente.map(cliente => {\r\n                            if (cliente.cpf === \"132589897-55\") { //cpf de comparacao setado hardcoded no lado direito\r\n                                return <tr key={cliente.cpf}>\r\n                                    <th scope=\"row\">{cliente.cpf}</th>\r\n                                    <td>{cliente.nome}</td>\r\n                                    <td>{cliente.telefone}</td>\r\n                                    <td>{cliente.logradouro}</td>\r\n                                    <td>{cliente.numero}</td>\r\n                                    <td>{cliente.nomeBairro}</td>\r\n                                    <td><button onClick={() => this.iniciarAlterar(cliente)} type=\"button\" className=\"btn btn-light\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Editar cliente\"><i className=\"bi bi-pencil-fill\"></i></button></td>\r\n                                    <td><button onClick={() => this.excluir(cliente)} type=\"button\" className=\"btn btn-light\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Excluir cliente\"><i className=\"bi bi-trash-fill\"></i></button></td>\r\n                                </tr>\r\n                            }\r\n                            return<tr></tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }*/\r\n\r\n    render() {\r\n        let pagina = ''\r\n        \r\n            pagina = this.renderIncluirNovoCliente()\r\n    \r\n        \r\n        return pagina\r\n    }\r\n\r\n} "]},"metadata":{},"sourceType":"module"}